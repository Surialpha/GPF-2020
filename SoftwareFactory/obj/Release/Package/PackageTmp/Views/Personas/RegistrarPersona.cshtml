@model SoftwareFactory.Models.Personas

@{
    ViewBag.Title = "Registrar Persona";
    Layout = "~/Views/Shared/_DashLayout.cshtml";
}

<div class="row">
    <div class="col" align="center">
        <a href="~/Personas/Index" class="btn btn-primary btn-circle float-left" data-toggle="tooltip" data-placement="right" title="Atras"><i class="fas fa-reply"></i></a>
        <h2>Registrar Persona</h2>
    </div>
</div>

<div class="container">



    @using (Html.BeginForm())
    {

        @Html.AntiForgeryToken()

        <hr />
        <div class="form-horizontal row">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group col-sm-12 col-md-12 col-lg-12">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Documento</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-gradient-info text-white"><i class="fas fa-crown"></i></div>
                        </div>
                        <select id="documentoRead">
                            @foreach (var user in ViewBag.usuario)
                            {
                                <option value="@user.id_usuario-@user.id_rol">@user.id_usuario - @user.email</option>
                            }
                        </select>
                        <input type="number" name="documento" app-for="documento" id="documento" hidden />
                    </div>
                    @Html.ValidationMessageFor(model => model.documento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Nombres</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-gradient-info text-white"><i class="fas fa-address-card"></i></div>
                        </div>
                        @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombres" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Apellidos</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-gradient-info text-white"><i class="fas fa-address-card"></i></div>
                        </div>
                        @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellidos" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Numero de contacto</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-gradient-info text-white"><i class="fas fa-phone-square-alt"></i></div>
                        </div>
                        @Html.EditorFor(model => model.numero_contacto, new { htmlAttributes = new { @class = "form-control", @placeholder = "numero contacto" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.numero_contacto, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">tipo documento</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-gradient-info text-white"><i class="fas fa-user-cog"></i></div>
                        </div>
                        @Html.DropDownList("id_documento", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.id_documento, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Fecha Nacimiento</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-gradient-info text-white"><i class="fas fa-calendar-alt"></i></div>
                        </div>
                        @Html.EditorFor(model => model.fecha_nacimiento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Fecha de nacimiento", @id = "calendario",@readonly = true } })
                    </div>
                    @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Rol</label>
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-gradient-info text-white"><i class="fas fa-venus-mars"></i></div>
                        </div>
                        @Html.DropDownList("id_sexo", null, htmlAttributes: new { @class = "form-control", @placeholder = "sexo" })
                    </div>
                    @Html.ValidationMessageFor(model => model.id_sexo, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group col-sm-12 col-md-12 col-lg-12" align="center">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Registrar" class="btn bg-gradient-info text-white" />
                    </div>
                </div>
            </div>




        </div>
    }

</div>

@section script{
   

    <script>




        var año = '-18Y'
        var minaño = '-90Y'
        var tpD = ""
        var rol = ""
        var SplitRol=[]


        $('#id_documento').on("change", function () {
            tpD = $('#id_documento').val()

            console.log(tpD)
            if (tpD == "3") {
                $('#calendario').datepicker("destroy")
                año = '-15Y'
                minaño = '-18Y'
                generarFecha()
            }
            else {
                $('#calendario').datepicker("destroy")
                año = '-18Y'
                minaño = '-90Y'
                generarFecha()
            }

        });


        $('#documentoRead').on("change", function () {

            rol = $('#documentoRead').val()
            SplitRol = rol.split("-")
            if (SplitRol[1] != "2") {
                $("#id_documento option[value='3']").attr('disabled', true);
                $("#documento").val(SplitRol[0])
            } else {
                $("#id_documento option[value='3']").attr('disabled', false);
                $("#documento").val(SplitRol[0])
            }

        });



        $(document).ready(function () {

            tpD = $('#id_documento').val()

            if (tpD === "3") {
                año = '-15Y'
                minaño = '-18Y'
            }


            $('#documentoRead').chosen();


            generarFecha()

            rol = $('#documentoRead').val()
            SplitRol = rol.split("-")
            console.log(SplitRol)
            if (SplitRol[1] != "2") {
                console.log(SplitRol[0])

                $("#id_documento option[value='3']").attr('disabled', true);
                $("#documento").val(SplitRol[0])
            }
            else {
                $("#documento").val(SplitRol[0])
            }

        });


        function generarFecha() {

            $('#calendario').datepicker({
                changeMonth: true,
                changeYear: true,
                minDate: minaño,
                maxDate: año,
                yearRange: '-90:+0',
                dateFormat: 'yy/mm/dd'

            });
        }
    </script>

        }
